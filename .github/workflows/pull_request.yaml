# Compile, bundle, and upload application bundles
# to a cloud storage on each pull request to "main".
# https://help.github.com/actions

name: PR

on:
  pull_request:
    branches: [main]

env:
  VERSION: ${{ github.event.pull_request.number }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-key.json
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: postgres

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ env.PGUSER }}
          POSTGRES_PASSWORD: ${{ env.PGPASSWORD }}
          POSTGRES_DB: ${{ env.PGDATABASE }}
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.yarn/cache
            ${{ github.workspace }}/.yarn/unplugged
            ${{ github.workspace }}/.yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile

      # Analyze code for potential problems
      - run: yarn prettier --check .
      - run: yarn lint --no-cache

      # Test
      - run: yarn api:tsc
      - run: yarn db:migrate
      - run: yarn test

      # Compile
      - run: yarn api:build
      - run: yarn web:relay
      - run: yarn web:build

      # Upload to a cloud storage bucket
      # - run: yarn workspaces foreach -p run push

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.yarn/cache
            ${{ github.workspace }}/.yarn/unplugged
            ${{ github.workspace }}/.yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn install

      # TODO: Deploy from the previously built artifacts
      # - run: yarn workspaces foreach -p run deploy
